%!PS-Adobe-2.0 EPSF-1.2
%%Title: logopage.FH10
%%Creator: FreeHand 10.0
%%CreationDate: Thu Nov 06 09:11:52 2003 
%%BoundingBox: 0 0 240 81
%%FHPathName:F:\Diana restore from gateway\users\restore\Ntfs - di's other\Logos\logopage.FH10
%ALDOriginalFile:F:\Diana restore from gateway\users\restore\Ntfs - di's other\Logos\logopage.FH10
%ALDBoundingBox: -485 -507 739 285
%%FHPageNum:1
%%DocumentSuppliedResources: procset Altsys_header 4 0
%%ColorUsage: Color
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentCustomColors: (PANTONE 124 CV)
%%+ (PANTONE 539 CVC)
%%+ (PANTONE 540 CVC)
%%CMYKCustomColor: 0 0.275 1 0.06 (PANTONE 124 CV)
%%+ 1 0.51 0 0.69 (PANTONE 539 CVC)
%%+ 1 0.47 0 0.47 (PANTONE 540 CVC)
%%CMYKProcessColor: 0 0 1 0 (0c 0m 100y 0k)
%%+ 0.18 0.37 0.9 0.06 (poster gold)
%%+ 0.1 0.5 1 0.3 (printer gold)
%%DocumentNeededResources: font Arial-BoldMT
%%+ font ArialMT
%%DocumentFonts: Arial-BoldMT
%%+ ArialMT
%%DocumentNeededFonts: Arial-BoldMT
%%+ ArialMT
%%EndComments
%%BeginResource: procset Altsys_header 4 0
userdict begin /AltsysDict 300 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/Xic{matrix invertmatrix concat}bdf
/Xq{matrix currentmatrix mark}bdf
/XQ{cleartomark setmatrix}bdf
/sepdef{
dup where not
{
AltsysSepDict
}
if	
3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/cntr 0 def
/readbinarystring{
/cntr 0 def
2 copy readstring
{
{
dup
(\034) search
{
length exch pop exch
dup length 0 ne
{
dup dup 0 get  32 sub 0 exch put
/cntr cntr 1 add def
}
{
pop 1 string dup
0 6 index read pop 32 sub put
}ifelse
3 copy
putinterval pop
1 add
1 index length 1 sub
1 index sub
dup 0 le {pop pop exit}if
getinterval
}
{
pop exit
} ifelse
} loop
}if
cntr 0 gt
{
pop 2 copy
dup length cntr sub cntr getinterval
readbinarystring
} if
pop exch pop
} bdf
/_NXLevel2 defed {			
_NXLevel2 not {			
/colorimage where {
userdict eq {
/_rci false def		
} if
} if
} if
} if
/md defed{	
md type /dicttype eq {		
/colorimage where {		
md eq {				
/_rci false def	
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
}if
}if
/setstrokeadjust defed
{
true setstrokeadjust
/C{curveto}bdf
/L{lineto}bdf
/m{moveto}bdf
}
{
/dr{transform .25 sub round .25 add
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/setstrokeadjust{pop}bdf	
}ifelse
/privrectpath {	
4 -2 roll m
dtransform round exch round exch idtransform	
2 copy 0 lt exch 0 lt xor
{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
ifelse
closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
/_fonthacksave false def
/currentpacking defed
{
/_bfh {/_fonthacksave currentpacking def false setpacking} bdf
/_efh {_fonthacksave setpacking} bdf
}
{
/_bfh {} bdf
/_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/`	
{
false setoverprint		
/-save0- save def
5 index concat
pop
storerect left bottom width height rectclip
pop
/MMdict_count countdictstack def
/MMop_count count 1 sub def
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1
statusdict begin
/processcolors defed
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
end 
def
%	pix = x^2 + y^2
/printerRes
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/graycalcs
[
{Angle Frequency}			
{GrayAngle GrayFrequency}	
{0 Width Height matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 72 exch div}	
{0 GrayWidth GrayHeight matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 72 exch div}	
] def
/calcgraysteps {
forcemaxsteps
{
maxsteps
}
{
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60}	
ifelse
}
ifelse
end
}
{
currentscreen pop exch			
}
ifelse
printerRes 300 max exch div exch	
2 copy								
sin mul round dup mul				
3 1 roll							
cos mul round dup mul				
add 1 add							
dup maxsteps gt {pop maxsteps} if	
dup minsteps lt {pop minsteps} if	
}
ifelse
} bdf
/nextrelease defed {						
/languagelevel defed not {				
/framebuffer defed {				
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
}if
}if
fhnumcolors 1 ne {
/calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
currentpagedevice /PreRenderingEnhance known
{
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps
{
forcemaxsteps
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
} if
} if
/gradfrequency 144 def
printerRes 1000 lt {
/gradfrequency 72 def
} if
/adjnumsteps {
dup dtransform abs exch abs max  
printerRes div 					 
gradfrequency mul 				 
round 						 
5 max						 
min							 
}bdf
/goodsep {
spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def			
/delta -0 def			
/frac -0 def			
/height -0 def			
/left -0 def			
/numsteps1 -0 def		
/radius -0 def			
/right -0 def			
/top -0 def				
/width -0 def			
/xt -0 def				
/yt -0 def				
/df currentflat def		
/tempstr 1 string def	
/clipflatness currentflat def	
/inverted?				
0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def		
/tc2 [0 0 0 1] def		
/storerect{/top xdf /right xdf /bottom xdf /left xdf
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
systemdict /packedarray known
{dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{	
/proc2 exch cvlit def	/proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{	
/proc2 exch cvlit def	/proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/i{dup 0 eq
{pop df dup}	
{dup} ifelse
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
/NF exch def	
{				
exch dup	
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
}forall
NF
}bdf
/MN{
1 index length 		
/Len exch def
dup length Len add 	
string dup 			
Len 				
4 -1 roll 			
putinterval 		
dup 				
0 					
4 -1 roll			
putinterval			
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RC}
ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}
{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll
{3 -1 roll dup 4 -2 roll put}forall put definefont}
ifelse}bdf
/RCJ{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFJ		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFJ{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCJ}
ifelse
}bdf
/hasfont
{
/resourcestatus where	
{
pop			
/Font resourcestatus
{			
pop pop true
}
{			
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFJ
{
dup			
hasfont		
not			
{			
pop
/Ryumin-Light-83pv-RKSJ-H
hasfont			
{
/Ryumin-Light-83pv-RKSJ-H
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFJ{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFJ				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/GS {
dup
hasfont
{
findfont
exch makesetfont
exch
pop
ts
}
{
pop pop pop
ts
} ifelse
} bdf
/RCK{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFK		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFK{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCK}
ifelse
}bdf
/hasfont
{
/resourcestatus where	
{
pop			
/Font resourcestatus
{			
pop pop true
}
{			
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFK
{
dup			
hasfont		
not			
{			
pop
/JCsm
hasfont			
{
/JCsm
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFK{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFK				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/RCTC{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFTC		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFTC{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCTC}
ifelse
}bdf
/FDFTC
{
dup			
hasfont		
not			
{			
pop
/DFMing-Lt-HK-BF
hasfont			
{
/DFMing-Lt-HK-BF
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFTC{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFTC				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/fps{
currentflat 		
exch 				
dup 0 le{pop 1}if	
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}	
{exit}			
ifelse
}loop
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf		
/W{/clipper load 100 clipflatness dup setflat fps}bdf
/AVec 256 array def
AVec 0 /Helvetica findfont
/Encoding get 0 256 getinterval putinterval
/ANSIPatch[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#89/perthousand 16#8A/Scaron
16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash
16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe
16#9F/Ydieresis 16#A0/space 16#A4/currency 16#A6/brokenbar
16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB/guillemotleft
16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron 16#B0/degree
16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute 16#B5/mu
16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf
16#BE/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute
16#CE/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve
16#D3/Oacute 16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply
16#D8/Oslash 16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis
16#DD/Yacute 16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute
16#E2/acircumflex 16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae
16#E7/ccedilla 16#E8/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis
16#EC/igrave 16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth
16#F1/ntilde 16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde
16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute
16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis
] def
127 1 159 { AVec exch/bullet put } for
ANSIPatch aload pop ANSIPatch length 2 idiv{AVec 3 1 roll put}repeat
/DoPatch { dup /CharStrings known
{ setfont
0 1 255 { dup
currentfont
/Encoding get
exch get
currentfont /CharStrings get
exch known
{pop} {currentfont /Encoding get exch /bullet put} ifelse
} for
} {pop} ifelse
} def
/findheaderfont {
AVec 256 array copy
/FHT /|______Helvetica dup RF findfont def
FHT DoPatch
FHT
}	def
end		%. AltsysDict
%%EndResource
%%EndProlog
%%BeginSetup
AltsysDict begin
_bfh	
%%IncludeResource: font Arial-BoldMT
/Arial-BoldMT findfont
/Encoding get StandardEncoding eq 
{
AVec 256 array copy
/f0 /|______Arial-BoldMT dup RF findfont def
f0 DoPatch
} {
/f0 /Arial-BoldMT findfont def  
} ifelse
%%IncludeResource: font ArialMT
/ArialMT findfont
/Encoding get StandardEncoding eq 
{
AVec 256 array copy
/f1 /|______ArialMT dup RF findfont def
f1 DoPatch
} {
/f1 /ArialMT findfont def  
} ifelse
_efh	
end %. AltsysDict
%%EndSetup
AltsysDict begin	
/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor {    
max max max		
} ndf
/maxspot {
pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf		
/currentoverprint false ndf
/cmykbufs2gray{
0 1 2 index length 1 sub
{
4 index 1 index get	0.3 mul		
4 index 2 index get	0.59 mul	
4 index 3 index get	0.11 mul	
4 index 4 index get				
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
}for
4 1 roll pop pop pop
}bdf
/colorimage{
pop pop
[
5 -1 roll/exec cvx
6 -1 roll/exec cvx
7 -1 roll/exec cvx
8 -1 roll/exec cvx
/cmykbufs2gray cvx
]cvx
image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st
image
}
ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub	
1.0 dup im ik add min sub	
1.0 dup iy ik add min sub	
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll	
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll	
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll	
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll	
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
}
ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
}
ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/spotascmyk false ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf		
/setspotcolor {		
spots exch get
dup 4 get (_vc_Registration) eq
{pop 1 exch sub setseparationgray}
{0 5 getinterval exch setcustomcolor}
ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf			
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
userdict /islevel2
systemdict /languagelevel known dup
{
pop systemdict /languagelevel get 2 ge
} if
put
islevel2 not
{
/currentcmykcolor
{
0 0 0 1 currentgray sub
} ndf
} if
/tc
{
gsave
setcmykcolor currentcmykcolor
grestore
} bind def
/testCMYKColorThrough
{
tc add add add 0 ne
} bind def
/fhiscomposite where not {
userdict /fhiscomposite
islevel2
{
gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
add add add 4 eq
}
{
1 0 0 0 testCMYKColorThrough
0 1 0 0 testCMYKColorThrough
0 0 1 0 testCMYKColorThrough
0 0 0 1 testCMYKColorThrough
and and and
} ifelse
put
}
{ pop }
ifelse
/bc4 [0 0 0 0] def	
/_lfp4 {
1 pop	
/yt xdf							
/xt xdf							
/ang xdf						
storerect
/taperfcn xdf
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor						
calcgraysteps mul abs round		
height abs adjnumsteps			
dup 1 lt {pop 1} if				
1 sub /numsteps1 xdf
currentflat mark				
currentflat clipflatness		
/delta top bottom sub numsteps1 1 add div def	
/right right left sub def		
/botsv top delta sub def		
{
{
W
xt yt translate
ang rotate
xt neg yt neg translate
dup setflat				
/bottom botsv def
0 1 numsteps1			
{
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat		
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/bcs [0 0] def	
/_lfs4 {
/yt xdf							
/xt xdf							
/ang xdf						
storerect
/taperfcn xdf
/tint2 xdf						
/tint1 xdf						
bcs exch 1 exch put				
tint1 tint2 sub abs				
bcs 1 get maxspot				
calcgraysteps mul abs round		
height abs adjnumsteps			
dup 2 lt {pop 2} if				
1 sub /numsteps1 xdf
currentflat mark				
currentflat clipflatness		
/delta top bottom sub numsteps1 1 add div def	
/right right left sub def		
/botsv top delta sub def		
{
{
W
xt yt translate
ang rotate
xt neg yt neg translate
dup setflat				
/bottom botsv def
0 1 numsteps1			
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat		
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfs6 {
/tint2 xdf						
/tint1 xdf						
bcs exch 1 exch put				
/inrad xdf						
/radius xdf						
/yt xdf							
/xt xdf							
tint1 tint2 sub abs				
bcs 1 get maxspot				
calcgraysteps mul abs round		
radius inrad sub abs			
adjnumsteps						
dup 1 lt {pop 1} if				
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse	
2 div /halfstep xdf				
currentflat mark				
currentflat clipflatness		
{
{
dup setflat				
W 						
0 1 numsteps1			
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat		
{
newpath mark	
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{	arc
radindex numsteps1 ne
inrad 0 gt or		
{
xt yt			
numsteps1 0 eq
{ inrad }	
{			
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfp6 {
1 pop	
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
/inrad xdf						
/radius xdf						
/yt xdf							
/xt xdf							
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor					
calcgraysteps mul abs round	
radius inrad sub abs		
adjnumsteps					
dup 1 lt {pop 1} if			
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse	
2 div /halfstep xdf			
currentflat mark			
currentflat clipflatness	
{
{
dup setflat			
W 					
0 1 numsteps1		
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat		
{
newpath mark	
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{	arc
radindex numsteps1 ne
inrad 0 gt or		
{
xt yt			
numsteps1 0 eq
{ inrad }	
{			
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs6{_rfs6}ndf
/rfp6{_rfp6}ndf
/cvc [0 0 0 1] def	
/vc{
AltsysDict /cvc 2 index put	
aload length dup 4 eq
{pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse}
{6 eq {sethexcolor} {setspotcolor}	ifelse }
ifelse
}bdf	
0 setseparationgray
/imgr {1692 1584 2916 2376 } def			
/bleed 0 def			
/clpr {1692 1584 2916 2376 } def			
/xs 1 def				
/ys 1 def				
/botx 0 def			
/overlap 0 def			
/wdist 18 def			
0 2 mul fhsetspreadsize	
0 0 ne {/df 0 def /clipflatness 0 def} if	
/maxsteps 256 def		
/forcemaxsteps false def	
/minsteps 0 def		
userdict begin /AGDOrigMtx matrix currentmatrix def end
vms
-2177 -2091 translate
/currentpacking defed{false setpacking}if 	
/spots[
1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
0 0.275 1 0.06 (PANTONE 124 CV) false newcmykcustomcolor
1 0.51 0 0.69 (PANTONE 539 CVC) false newcmykcustomcolor
1 0.47 0 0.47 (PANTONE 540 CVC) false newcmykcustomcolor
]def
/textopf false def
/curtextmtx{}def
/otw .25 def
/msf{dup/curtextmtx xdf makefont setfont}bdf
/makesetfont/msf load def
/curtextheight{.707104 .707104 curtextmtx dtransform
dup mul exch dup mul add sqrt}bdf
/ta2{							
tempstr 2 index gsave exec grestore		
cwidth cheight rmoveto				
4 index eq{5 index 5 index rmoveto}if		
2 index 2 index rmoveto			
}bdf
/ta{exch systemdict/cshow known
{{/cheight xdf/cwidth xdf tempstr 0 2 index put ta2}exch cshow}	
{{tempstr 0 2 index put tempstr stringwidth/cheight xdf/cwidth xdf ta2}forall}	
ifelse 6{pop}repeat}bdf
/sts{/textopf currentoverprint def vc setoverprint
/ts{awidthshow}def exec textopf setoverprint}bdf
/stol{/xt currentlinewidth def 	
setlinewidth vc newpath	
/ts{{false charpath stroke}ta}def exec
xt setlinewidth}bdf	
/strk{/textopf currentoverprint def vc setoverprint
/ts{{false charpath stroke}ta}def exec
textopf setoverprint
}bdf
/cvtr {1 exch sub 3 1 roll} def
/vr {
[ 3 index 3 index 3 index cvtr cvtr cvtr 0 ]
fhiscomposite not {vc pop pop pop}{pop setrgbcolor}ifelse
} def
/vc {AltsysDict /cvc 2 index put aload length dup 4 eq
{pop dup -0.2 ge {setcmykcolor} {pop vr} ifelse}
{6 eq {sethexcolor} {setspotcolor} ifelse} ifelse
} bdf
n
[] 0 d
3.863708 M
1 w
0 j
0 J
false setoverprint
0 i
false eomode
[0 0 0 1]vc
vms
2177.6085 2126.5469 m
2183.8775 2096.8356 L
2177.6085 2096.8356 L
2177.6085 2126.5469 L
2177.6085 2126.5469 L
0.8125 w
4 M
[0.18 0.37 0.9 0.06]vc
s	
n
2190.1465 2126.5469 m
2183.8775 2096.8356 L
2190.1465 2096.8356 L
2190.1465 2126.5469 L
2190.1465 2126.5469 L
s	
n
2187.012 2112 m
2183.8775 2171.43 L
2180.743 2112 L
S	
n
2177.6085 2094.7677 m
2190.1465 2094.7677 L
2190.1465 2091.8067 L
2177.6085 2091.8067 L
2177.6085 2094.7677 L
s	
n
2212.9148 2129.5911 m
2209.3149 2129.5911 L
2208.985 2131.4632 L
2207.515 2129.8071 2204.9951 2129.231 2203.0152 2129.231 C
2196.5355 2129.231 2192.3356 2133.1914 2192.3356 2138.1598 C
2192.3356 2143.1282 2196.5355 2147.0886 2203.0152 2147.0886 C
2207.455 2147.0886 2212.1948 2145.1924 2212.7048 2140.896 C
2207.125 2140.896 L
2206.945 2142.3601 2205.1451 2143.2483 2202.8952 2143.2483 C
2199.2953 2143.2483 2197.9154 2140.704 2197.9154 2138.1598 C
2197.9154 2135.6155 2199.2953 2133.0714 2202.8952 2133.0714 C
2205.6551 2133.0714 2207.515 2134.1034 2207.815 2135.6636 C
2203.9152 2135.6636 L
2203.9152 2138.9759 L
2212.9148 2138.9759 L
2212.9148 2129.5911 L
[1 5]vc
f	
n
2219.1204 2134.8235 m
2219.2104 2133.1193 2220.4403 2131.9912 2222.6003 2131.9912 C
2223.8302 2131.9912 2225.0301 2132.4473 2225.5101 2133.3594 C
2230.2799 2133.3594 L
2229.35 2130.4791 2226.0201 2129.231 2222.5402 2129.231 C
2217.4706 2129.231 2214.0206 2131.6793 2214.0206 2135.8556 C
2214.0206 2139.6719 2217.8304 2142.4081 2222.4203 2142.4081 C
2228 2142.4081 2230.7899 2139.0479 2230.5499 2134.8235 C
2219.1204 2134.8235 L
h
2225.4501 2137.1037 m
2225.3601 2138.4958 2224.1302 2139.6479 2222.4203 2139.6479 C
2220.6203 2139.6479 2219.4204 2138.6159 2219.1204 2137.1037 C
2225.4501 2137.1037 L
f	
n
2239.5355 2142.4081 m
2244.3653 2142.4081 2247.7551 2139.5519 2247.7551 2135.8076 C
2247.7551 2132.0633 2244.3653 2129.231 2239.5355 2129.231 C
2234.7057 2129.231 2231.3458 2132.0633 2231.3458 2135.8076 C
2231.3458 2139.5519 2234.7057 2142.4081 2239.5355 2142.4081 C
h
2239.5355 2132.3513 m
2241.9054 2132.3513 2242.6553 2134.2235 2242.6553 2135.8076 C
2242.6553 2137.3917 2241.9054 2139.2879 2239.5355 2139.2879 C
2237.1656 2139.2879 2236.4456 2137.3917 2236.4456 2135.8076 C
2236.4456 2134.2235 2237.1656 2132.3513 2239.5355 2132.3513 C
f	
n
2248.6009 2142.0481 m
2253.5508 2142.0481 L
2253.5508 2139.864 L
2253.6107 2139.864 L
2254.3607 2141.4481 2256.1006 2142.2882 2258.2906 2142.2882 C
2258.6805 2142.2882 2259.1005 2142.2642 2259.4905 2142.1921 C
2259.4905 2138.4718 L
2258.8305 2138.6159 2258.2306 2138.7118 2257.5406 2138.7118 C
2255.0207 2138.7118 2253.7007 2137.3197 2253.7007 2135.7596 C
2253.7007 2129.5911 L
2248.6009 2129.5911 L
2248.6009 2142.0481 L
f	
n
2275.7538 2131.1032 m
2275.7538 2129.063 2275.2738 2125.2226 2267.9841 2125.2226 C
2264.3542 2125.2226 2260.9344 2125.8707 2260.3344 2129.207 C
2265.4342 2129.207 L
2265.5542 2128.6549 2265.8242 2128.3189 2266.3042 2128.1269 C
2266.7542 2127.9349 2267.3841 2127.8629 2268.1641 2127.8629 C
2270.594 2127.8629 2270.834 2129.231 2270.834 2130.7672 C
2270.834 2131.9433 L
2270.774 2131.9433 L
2269.844 2130.7911 2268.2841 2130.1191 2266.6342 2130.1191 C
2261.9243 2130.1191 2259.7944 2132.8073 2259.7944 2136.3117 C
2259.7944 2139.6239 2262.2243 2142.4081 2266.6342 2142.4081 C
2268.4941 2142.4081 2269.904 2141.7601 2270.804 2140.488 C
2270.864 2140.488 L
2270.864 2142.0481 L
2275.7538 2142.0481 L
2275.7538 2131.1032 L
h
2267.8641 2139.2879 m
2265.6142 2139.2879 2264.8942 2137.7038 2264.8942 2136.1676 C
2264.8942 2134.7035 2265.7342 2133.2394 2267.8341 2133.2394 C
2269.994 2133.2394 2270.924 2134.5835 2270.924 2136.1436 C
2270.924 2137.7278 2270.144 2139.2879 2267.8641 2139.2879 C
f	
n
2277.6996 2142.0481 m
2282.7994 2142.0481 L
2282.7994 2129.5911 L
2277.6996 2129.5911 L
2277.6996 2142.0481 L
h
2282.7994 2143.6083 m
2277.6996 2143.6083 L
2277.6996 2146.7286 L
2282.7994 2146.7286 L
2282.7994 2143.6083 L
f	
n
2284.2988 2138.2078 m
2284.3888 2139.84 2285.3488 2140.896 2286.7287 2141.5441 C
2288.1086 2142.1682 2289.9086 2142.4081 2291.6785 2142.4081 C
2295.3683 2142.4081 2298.9382 2141.7601 2298.9382 2138.2318 C
2298.9382 2132.7833 L
2298.9382 2131.7273 2298.9382 2130.5752 2299.5382 2129.5911 C
2294.4084 2129.5911 L
2294.2284 2129.9751 2294.1684 2130.3591 2294.1084 2130.7672 C
2292.7884 2129.663 2290.8385 2129.231 2288.9786 2129.231 C
2286.0087 2129.231 2283.6688 2130.4311 2283.6688 2132.9994 C
2283.6688 2137.0557 2289.1886 2136.7437 2292.7284 2137.3197 C
2293.5984 2137.4638 2294.0784 2137.7038 2294.0784 2138.4718 C
2294.0784 2139.4079 2292.6685 2139.768 2291.6185 2139.768 C
2290.2086 2139.768 2289.3086 2139.2639 2289.0686 2138.2078 C
2284.2988 2138.2078 L
h
2290.8985 2131.7513 m
2293.3284 2131.7513 2294.1384 2132.8554 2294.0184 2135.4235 C
2293.2984 2135.0635 2291.9785 2134.9915 2290.8685 2134.7515 C
2289.7286 2134.5355 2288.7686 2134.1515 2288.7686 2133.1674 C
2288.7686 2132.1592 2289.7586 2131.7513 2290.8985 2131.7513 C
f	
n
2253.2146 2122.6382 m
2246.8249 2122.6382 L
2246.8249 2109.3411 L
2241.2451 2109.3411 L
2241.2451 2122.6382 L
2234.8553 2122.6382 L
2234.8553 2126.4786 L
2253.2146 2126.4786 L
2253.2146 2122.6382 L
f	
n
2253.8136 2114.5735 m
2253.9036 2112.8693 2255.1335 2111.7412 2257.2935 2111.7412 C
2258.5234 2111.7412 2259.7234 2112.1973 2260.2033 2113.1094 C
2264.9731 2113.1094 L
2264.0432 2110.2291 2260.7133 2108.981 2257.2335 2108.981 C
2252.1637 2108.981 2248.7138 2111.4293 2248.7138 2115.6056 C
2248.7138 2119.4219 2252.5236 2122.1581 2257.1135 2122.1581 C
2262.6932 2122.1581 2265.4831 2118.7979 2265.2431 2114.5735 C
2253.8136 2114.5735 L
h
2260.1433 2116.8537 m
2260.0533 2118.2458 2258.8234 2119.3979 2257.1135 2119.3979 C
2255.3135 2119.3979 2254.1136 2118.3659 2253.8136 2116.8537 C
2260.1433 2116.8537 L
f	
n
2277.2635 2117.2378 m
2277.2335 2118.2938 2276.0636 2119.0379 2274.7736 2119.0379 C
2271.9237 2119.0379 2271.4738 2117.0937 2271.4738 2115.3655 C
2271.4738 2113.7575 2272.3438 2112.1013 2274.5036 2112.1013 C
2276.2736 2112.1013 2277.1735 2112.9174 2277.4135 2114.2374 C
2282.3633 2114.2374 L
2281.9133 2110.9012 2278.6735 2108.981 2274.5336 2108.981 C
2269.8538 2108.981 2266.374 2111.5492 2266.374 2115.3655 C
2266.374 2119.3259 2269.5238 2122.1581 2274.5336 2122.1581 C
2278.4035 2122.1581 2281.8533 2120.526 2282.2133 2117.2378 C
2277.2635 2117.2378 L
f	
n
2283.4072 2126.4786 m
2288.5069 2126.4786 L
2288.5069 2120.094 L
2288.5669 2120.094 L
2289.3469 2121.3661 2291.4468 2122.1581 2293.3067 2122.1581 C
2298.4965 2122.1581 2298.9165 2119.1339 2298.9165 2117.3337 C
2298.9165 2109.3411 L
2293.8167 2109.3411 L
2293.8167 2115.3655 L
2293.8167 2117.0697 2294.0567 2118.7979 2291.2668 2118.7979 C
2289.3469 2118.7979 2288.5069 2117.5017 2288.5069 2116.1337 C
2288.5069 2109.3411 L
2283.4072 2109.3411 L
2283.4072 2126.4786 L
f	
n
2213.4657 2122.1393 m
2218.1948 2122.1393 2221.514 2119.3429 2221.514 2115.6771 C
2221.514 2112.0114 2218.1948 2109.2385 2213.4657 2109.2385 C
2208.7367 2109.2385 2205.4469 2112.0114 2205.4469 2115.6771 C
2205.4469 2119.3429 2208.7367 2122.1393 2213.4657 2122.1393 C
0.5 w
s	
n
2213.4657 2112.2934 m
2215.7862 2112.2934 2216.5205 2114.1263 2216.5205 2115.6771 C
2216.5205 2117.228 2215.7862 2119.0844 2213.4657 2119.0844 C
2211.1453 2119.0844 2210.4403 2117.228 2210.4403 2115.6771 C
2210.4403 2114.1263 2211.1453 2112.2934 2213.4657 2112.2934 C
s	
n
2224.2114 2119.202 m
2221.8028 2119.202 L
2221.8028 2121.7868 L
2224.2114 2121.7868 L
2224.2114 2125.288 2225.7388 2126.369 2229.9979 2126.369 C
2230.791 2126.369 2231.6135 2126.322 2232.4065 2126.2985 C
2232.4065 2123.4787 L
2231.9366 2123.5257 2231.496 2123.5492 2231.0555 2123.5492 C
2229.9098 2123.5492 2229.2049 2123.4317 2229.2049 2122.3272 C
2229.2049 2121.7868 L
2232.2009 2121.7868 L
2232.2009 2119.202 L
2229.2049 2119.202 L
2229.2049 2109.5911 L
2224.2114 2109.5911 L
2224.2114 2119.202 L
s	
n
2302.3497 2146.619 m
2307.8131 2146.619 L
2307.8131 2129.8411 L
2302.3497 2129.8411 L
2302.3497 2146.619 L
s	
n
2309.8955 2142.0368 m
2314.7421 2142.0368 L
2314.7421 2140.3684 L
2314.8008 2140.3684 L
2315.7114 2141.6138 2317.7675 2142.3893 2319.5886 2142.3893 C
2324.6702 2142.3893 2325.0814 2139.4285 2325.0814 2137.6661 C
2325.0814 2129.8411 L
2320.088 2129.8411 L
2320.088 2135.7392 L
2320.088 2137.4076 2320.323 2139.0994 2317.5913 2139.0994 C
2315.7114 2139.0994 2314.8889 2137.8306 2314.8889 2136.4912 C
2314.8889 2129.8411 L
2309.8955 2129.8411 L
2309.8955 2142.0368 L
s	
n
vmrs
2331.2757 2133.8593 m
2331.2757 2133.2484 2331.5987 2132.8019 2332.098 2132.4964 C
2332.568 2132.2144 2333.2436 2132.0734 2333.9485 2132.0734 C
2334.9178 2132.0734 2336.2984 2132.4024 2336.2984 2133.3659 C
2336.2984 2134.3057 2334.7416 2134.4938 2333.8604 2134.6583 C
2330.7175 2135.2927 2326.7815 2135.3632 2326.7815 2138.653 C
2326.7815 2141.5903 2330.7468 2142.3893 2333.743 2142.3893 C
2337.0914 2142.3893 2340.5868 2141.6138 2340.7631 2138.4415 C
2336.1516 2138.4415 L
2336.1516 2138.9585 2335.9165 2139.2875 2335.5053 2139.499 C
2335.0941 2139.7105 2334.536 2139.8045 2333.9191 2139.8045 C
2333.0967 2139.8045 2331.7749 2139.734 2331.7749 2138.888 C
2331.7749 2137.7365 2335.1234 2137.525 2337.4145 2137.1256 C
2340.4987 2136.6321 2341.2918 2134.8463 2341.2918 2133.8358 C
2341.2918 2130.5695 2337.4145 2129.4885 2333.9779 2129.4885 C
2330.365 2129.4885 2326.664 2130.452 2326.5171 2133.8593 C
2331.2757 2133.8593 L
0.5 w
4 M
[1 5]vc
s	
n
2352.4219 2139.452 m
2349.3377 2139.452 L
2349.3377 2133.9063 L
2349.3377 2132.9428 2350.0427 2132.7313 2351.1295 2132.7313 C
2351.5407 2132.7313 2351.9813 2132.7784 2352.4219 2132.7784 C
2352.4219 2129.8411 L
2351.5113 2129.8176 2350.6008 2129.7235 2349.6902 2129.7235 C
2345.4311 2129.7235 2344.3443 2130.7105 2344.3443 2134.0238 C
2344.3443 2139.452 L
2341.8182 2139.452 L
2341.8182 2142.0368 L
2344.3443 2142.0368 L
2344.3443 2145.7261 L
2349.3377 2145.7261 L
2349.3377 2142.0368 L
2352.4219 2142.0368 L
2352.4219 2139.452 L
s	
n
2387.6553 2129.8411 m
2382.8088 2129.8411 L
2382.8088 2131.5095 L
2382.75 2131.5095 L
2381.8102 2130.264 2379.8715 2129.4885 2378.1091 2129.4885 C
2373.7325 2129.4885 2372.4694 2131.5095 2372.4694 2134.7053 C
2372.4694 2142.0368 L
2377.4629 2142.0368 L
2377.4629 2134.9638 L
2377.4629 2133.3424 2378.3441 2132.7784 2379.9302 2132.7784 C
2381.017 2132.7784 2382.6619 2133.3424 2382.6619 2135.5042 C
2382.6619 2142.0368 L
2387.6553 2142.0368 L
2387.6553 2129.8411 L
s	
n
2399.4574 2139.452 m
2396.3732 2139.452 L
2396.3732 2133.9063 L
2396.3732 2132.9428 2397.0782 2132.7313 2398.165 2132.7313 C
2398.5762 2132.7313 2399.0168 2132.7784 2399.4574 2132.7784 C
2399.4574 2129.8411 L
2398.5468 2129.8176 2397.6362 2129.7235 2396.7257 2129.7235 C
2392.4666 2129.7235 2391.3798 2130.7105 2391.3798 2134.0238 C
2391.3798 2139.452 L
2388.8537 2139.452 L
2388.8537 2142.0368 L
2391.3798 2142.0368 L
2391.3798 2145.7261 L
2396.3732 2145.7261 L
2396.3732 2142.0368 L
2399.4574 2142.0368 L
2399.4574 2139.452 L
s	
n
2354.2257 2142.0368 m
2359.2191 2142.0368 L
2359.2191 2129.8411 L
2354.2257 2129.8411 L
2354.2257 2142.0368 L
s	
n
2359.2191 2143.5642 m
2354.2257 2143.5642 L
2354.2257 2146.619 L
2359.2191 2146.619 L
2359.2191 2143.5642 L
s	
n
2370.9353 2139.452 m
2367.8512 2139.452 L
2367.8512 2133.9063 L
2367.8512 2132.9428 2368.556 2132.7313 2369.6428 2132.7313 C
2370.0541 2132.7313 2370.4947 2132.7784 2370.9353 2132.7784 C
2370.9353 2129.8411 L
2370.0247 2129.8176 2369.1141 2129.7235 2368.2035 2129.7235 C
2363.9444 2129.7235 2362.8577 2130.7105 2362.8577 2134.0238 C
2362.8577 2139.452 L
2360.3315 2139.452 L
2360.3315 2142.0368 L
2362.8577 2142.0368 L
2362.8577 2145.7261 L
2367.8512 2145.7261 L
2367.8512 2142.0368 L
2370.9353 2142.0368 L
2370.9353 2139.452 L
s	
n
2404.9471 2134.9638 m
2405.0352 2133.2954 2406.2395 2132.1909 2408.3544 2132.1909 C
2409.5587 2132.1909 2410.7336 2132.6374 2411.2036 2133.5303 C
2415.8739 2133.5303 L
2414.9633 2130.7105 2411.7029 2129.4885 2408.2956 2129.4885 C
2403.3316 2129.4885 2399.9538 2131.8854 2399.9538 2135.9742 C
2399.9538 2139.7105 2403.684 2142.3893 2408.1781 2142.3893 C
2413.6416 2142.3893 2416.3733 2139.0994 2416.1383 2134.9638 C
2404.9471 2134.9638 L
s	
n
2411.1448 2137.1961 m
2411.0567 2138.559 2409.8524 2139.687 2408.1781 2139.687 C
2406.4158 2139.687 2405.2408 2138.6765 2404.9471 2137.1961 C
2411.1448 2137.1961 L
s	
n
2301.4564 2121.7868 m
2306.303 2121.7868 L
2306.303 2120.1184 L
2306.3617 2120.1184 L
2307.2723 2121.3638 2309.3284 2122.1393 2311.1496 2122.1393 C
2316.2311 2122.1393 2316.6423 2119.1785 2316.6423 2117.4161 C
2316.6423 2109.5911 L
2311.6489 2109.5911 L
2311.6489 2115.4892 L
2311.6489 2117.1576 2311.8839 2118.8494 2309.1522 2118.8494 C
2307.2723 2118.8494 2306.4498 2117.5806 2306.4498 2116.2412 C
2306.4498 2109.5911 L
2301.4564 2109.5911 L
2301.4564 2121.7868 L
s	
n
2326.1814 2122.1393 m
2330.9103 2122.1393 2334.2295 2119.3429 2334.2295 2115.6771 C
2334.2295 2112.0114 2330.9103 2109.2385 2326.1814 2109.2385 C
2321.4522 2109.2385 2318.1624 2112.0114 2318.1624 2115.6771 C
2318.1624 2119.3429 2321.4522 2122.1393 2326.1814 2122.1393 C
s	
n
2326.1814 2112.2934 m
2328.5017 2112.2934 2329.2361 2114.1263 2329.2361 2115.6771 C
2329.2361 2117.228 2328.5017 2119.0844 2326.1814 2119.0844 C
2323.8608 2119.0844 2323.1558 2117.228 2323.1558 2115.6771 C
2323.1558 2114.1263 2323.8608 2112.2934 2326.1814 2112.2934 C
s	
n
2335.7862 2126.369 m
2340.7797 2126.369 L
2340.7797 2109.5911 L
2335.7862 2109.5911 L
2335.7862 2126.369 L
s	
n
2350.2257 2122.1393 m
2354.9548 2122.1393 2358.2739 2119.3429 2358.2739 2115.6771 C
2358.2739 2112.0114 2354.9548 2109.2385 2350.2257 2109.2385 C
2345.4966 2109.2385 2342.2068 2112.0114 2342.2068 2115.6771 C
2342.2068 2119.3429 2345.4966 2122.1393 2350.2257 2122.1393 C
s	
n
2350.2257 2112.2934 m
2352.5462 2112.2934 2353.2805 2114.1263 2353.2805 2115.6771 C
2353.2805 2117.228 2352.5462 2119.0844 2350.2257 2119.0844 C
2347.9052 2119.0844 2347.2002 2117.228 2347.2002 2115.6771 C
2347.2002 2114.1263 2347.9052 2112.2934 2350.2257 2112.2934 C
s	
n
2375.1667 2111.0714 m
2375.1667 2109.0741 2374.6967 2105.3143 2367.559 2105.3143 C
2364.0049 2105.3143 2360.6563 2105.9488 2360.0689 2109.215 C
2365.0623 2109.215 L
2365.1798 2108.6746 2365.4441 2108.3456 2365.9141 2108.1576 C
2366.3547 2107.9697 2366.9715 2107.8991 2367.7352 2107.8991 C
2370.1145 2107.8991 2370.3495 2109.2385 2370.3495 2110.7425 C
2370.3495 2111.8939 L
2370.2907 2111.8939 L
2369.3801 2110.766 2367.8527 2110.108 2366.2372 2110.108 C
2361.6256 2110.108 2359.5401 2112.7398 2359.5401 2116.1706 C
2359.5401 2119.4135 2361.9194 2122.1393 2366.2372 2122.1393 C
2368.0584 2122.1393 2369.4389 2121.5048 2370.3201 2120.2594 C
2370.3788 2120.2594 L
2370.3788 2121.7868 L
2375.1667 2121.7868 L
2375.1667 2111.0714 L
s	
n
2367.4415 2119.0844 m
2365.2385 2119.0844 2364.5336 2117.5335 2364.5336 2116.0297 C
2364.5336 2114.5963 2365.356 2113.1628 2367.4121 2113.1628 C
2369.527 2113.1628 2370.4376 2114.4788 2370.4376 2116.0062 C
2370.4376 2117.5571 2369.674 2119.0844 2367.4415 2119.0844 C
s	
n
2386.6774 2108.5101 m
2385.4731 2105.8313 2383.6814 2105.5023 2380.3034 2105.5023 C
2377.9535 2105.5023 L
2377.9535 2108.7451 L
2379.6865 2108.7451 L
2380.8321 2108.7451 2381.6839 2109.262 2381.6839 2110.108 C
2381.6839 2110.766 2380.7146 2112.6459 2380.4209 2113.3038 C
2376.4849 2121.7868 L
2381.772 2121.7868 L
2384.6507 2113.8443 L
2384.7094 2113.8443 L
2387.5879 2121.7868 L
2392.6989 2121.7868 L
2386.6774 2108.5101 L
s	
n
vmr
vmr
end
%%Trailer
%%DocumentNeededResources: font Arial-BoldMT
%%+ font ArialMT
%%DocumentFonts: Arial-BoldMT
%%+ ArialMT
%%DocumentNeededFonts: Arial-BoldMT
%%+ ArialMT
